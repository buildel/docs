{
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {},
    "schemas": {
      "CreateRun": {
        "description": "Optional body for creating a run",
        "title": "CreateRun",
        "type": "object",
        "required": false,
        "properties": {
          "alias": {
            "description": "Alias for the run",
            "type": "number"
          },
          "metadata": {
            "description": "Anything you want",
            "type": "object"
          }
        }
      },
      "InputDataToRun": {
        "description": "Payload,",
        "title": "InputDataToRun",
        "type": "object",
        "properties": {
          "block_name": {
            "description": "Name of block",
            "type": "string",
            "example": "text_input_1"
          },
          "input_name": {
            "description": "Name of input",
            "type": "string"
          },
          "data": {
            "description": "Content",
            "type": "string"
          }
        }
      },
      "ForbiddenResponse": {
        "properties": {
          "errors": {
            "properties": { "detail": { "enum": ["Forbidden"] } },
            "type": "object"
          }
        },
        "title": "ForbiddenResponse",
        "type": "object"
      },
      "NotFoundResponse": {
        "properties": {
          "errors": {
            "properties": {
              "detail": {
                "description": "Error message",
                "enum": ["Not Found"],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "NotFoundResponse",
        "type": "object"
      },
      "Organization": {
        "properties": {
          "api_key": {
            "description": "Organization API key",
            "type": "string"
          },
          "id": { "description": "Organization ID", "type": "integer" },
          "name": { "description": "Organization name", "type": "string" }
        },
        "required": ["id", "name"],
        "title": "Organization",
        "type": "object"
      },
      "OrganizationCreateRequest": {
        "properties": {
          "organization": {
            "properties": {
              "name": {
                "description": "Organization name",
                "minLength": 2,
                "type": "string"
              }
            },
            "required": ["name"],
            "type": "object"
          }
        },
        "required": ["organization"],
        "title": "OrganizationCreateRequest",
        "type": "object"
      },
      "OrganizationIndexResponse": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/Organization" },
            "type": "array"
          }
        },
        "required": ["data"],
        "title": "OrganizationIndexResponse",
        "type": "object"
      },
      "OrganizationShowApiKeyResponse": {
        "properties": {
          "data": {
            "properties": {
              "key": { "description": "Organization API key", "type": "string" }
            },
            "required": ["key"],
            "type": "object"
          }
        },
        "required": ["data"],
        "title": "OrganizationShowApiKeyResponse",
        "type": "object"
      },
      "OrganizationShowResponse": {
        "properties": {
          "data": { "$ref": "#/components/schemas/Organization" }
        },
        "required": ["data"],
        "title": "OrganizationShowResponse",
        "type": "object"
      },
      "UnauthorizedResponse": {
        "properties": {
          "errors": {
            "properties": {
              "detail": {
                "description": "Error message",
                "enum": ["Unauthorized"],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "UnauthorizedResponse",
        "type": "object"
      },
      "UnprocessableEntity": {
        "properties": {
          "errors": {
            "additionalProperties": {
              "items": {
                "description": "Field error message",
                "enum": ["Unprocessable entity"],
                "type": "string"
              },
              "type": "array"
            },
            "type": "object"
          }
        },
        "title": "UnprocessableEntity",
        "type": "object"
      },
      "User": {
        "properties": { "id": { "description": "User ID", "type": "integer" } },
        "required": ["id"],
        "title": "User",
        "type": "object"
      },
      "UserCreateForgotPasswordRequest": {
        "properties": {
          "email": {
            "description": "User email",
            "pattern": "@",
            "type": "string"
          }
        },
        "required": ["email"],
        "title": "UserCreateForgotPasswordRequest",
        "type": "object"
      },
      "UserShowResponse": {
        "properties": { "data": { "$ref": "#/components/schemas/User" } },
        "required": ["data"],
        "title": "UserShowResponse",
        "type": "object"
      },
      "UserUpdateForgotPasswordRequest": {
        "properties": {
          "password": {
            "description": "New password",
            "minLength": 12,
            "type": "string"
          },
          "password_confirmation": {
            "description": "New password confirmation",
            "minLength": 12,
            "type": "string"
          },
          "token": { "description": "Token", "type": "string" }
        },
        "required": ["token", "password", "password_confirmation"],
        "title": "UserUpdateForgotPasswordRequest",
        "type": "object"
      },
      "UserUpdatePasswordRequest": {
        "properties": {
          "current_password": {
            "description": "Current password",
            "minLength": 12,
            "type": "string"
          },
          "password": {
            "description": "New password",
            "minLength": 12,
            "type": "string"
          },
          "password_confirmation": {
            "description": "New password confirmation",
            "minLength": 12,
            "type": "string"
          }
        },
        "required": ["current_password", "password", "password_confirmation"],
        "title": "UserUpdatePasswordRequest",
        "type": "object"
      }
    }
  },
  "info": { "title": "Buildel", "version": "1.0" },
  "openapi": "3.0.0",
  "paths": {
    "/api/organizations/{organizationId}/pipelines/{pipelineId}/runs": {
      "post": {
        "summary": "Create run",
        "description": "Create new run",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRun"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": ["runs"]
      }
    },
    "/api/organizations/{organizationId}/pipelines/{pipelineId}/runs/{runId}/start": {
      "post": {
        "summary": "Start run",
        "description": "Start particular run",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Started"
          }
        },
        "tags": ["runs"]
      }
    },
    "/api/organizations/{organizationId}/pipelines/{pipelineId}/runs/{runId}/input": {
      "post": {
        "summary": "Input data to the run",
        "description": "Start particular run",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputDataToRun"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Triggered"
          }
        },
        "tags": ["runs"]
      }
    },
    "/api/organizations/{organizationId}/pipelines/{pipelineId}/runs/{runId}/stop": {
      "post": {
        "summary": "Stop run",
        "description": "Stop particular run",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Stopped"
          }
        },
        "tags": ["runs"]
      }
    },
    "/api/organizations": {
      "get": {
        "callbacks": {},
        "operationId": "BuildelWeb.OrganizationController.index",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationIndexResponse"
                }
              }
            },
            "description": "organizations"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          }
        },
        "summary": "List organizations",
        "tags": ["organization"]
      },
      "post": {
        "callbacks": {},
        "operationId": "BuildelWeb.OrganizationController.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreateRequest"
              }
            }
          },
          "description": "organization",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationShowResponse"
                }
              }
            },
            "description": "organization"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            },
            "description": "unprocessable entity"
          }
        },
        "summary": "Create organization",
        "tags": ["organization"]
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "callbacks": {},
        "operationId": "BuildelWeb.OrganizationController.show",
        "parameters": [
          {
            "description": "Organization ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationShowResponse"
                }
              }
            },
            "description": "organization"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            },
            "description": "not_found"
          }
        },
        "summary": "Get organization",
        "tags": ["organization"]
      },
      "put": {
        "callbacks": {},
        "operationId": "BuildelWeb.OrganizationController.update",
        "parameters": [
          {
            "description": "Organization ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreateRequest"
              }
            }
          },
          "description": "organization",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationShowResponse"
                }
              }
            },
            "description": "organization"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            },
            "description": "not_found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            },
            "description": "unprocessable entity"
          }
        },
        "summary": "Update organization",
        "tags": ["organization"]
      }
    },
    "/api/organizations/{id}/api_key": {
      "get": {
        "callbacks": {},
        "operationId": "BuildelWeb.OrganizationController.get_api_key",
        "parameters": [
          {
            "description": "Organization ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationShowApiKeyResponse"
                }
              }
            },
            "description": "organization_key"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            },
            "description": "not_found"
          }
        },
        "summary": "Get organization API key",
        "tags": ["organization"]
      },
      "post": {
        "callbacks": {},
        "operationId": "BuildelWeb.OrganizationController.reset_api_key",
        "parameters": [
          {
            "description": "Organization ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationShowApiKeyResponse"
                }
              }
            },
            "description": "organization_key"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundResponse" }
              }
            },
            "description": "not_found"
          }
        },
        "summary": "Reset organization API key",
        "tags": ["organization"]
      }
    },
    "/api/users/me": {
      "get": {
        "callbacks": {},
        "operationId": "BuildelWeb.UserController.me",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserShowResponse" }
              }
            },
            "description": "user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          }
        },
        "summary": "Get me",
        "tags": ["user"]
      }
    },
    "/api/users/password": {
      "put": {
        "callbacks": {},
        "operationId": "BuildelWeb.UserPasswordController.update",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdatePasswordRequest"
              }
            }
          },
          "description": "user",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserShowResponse" }
              }
            },
            "description": "user"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            },
            "description": "unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenResponse" }
              }
            },
            "description": "forbidden"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            },
            "description": "unprocessable entity"
          }
        },
        "summary": "Update user password",
        "tags": ["user"]
      }
    },
    "/api/users/password/reset": {
      "post": {
        "callbacks": {},
        "operationId": "BuildelWeb.UserPasswordResetController.create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateForgotPasswordRequest"
              }
            }
          },
          "description": "user",
          "required": false
        },
        "responses": {
          "200": {
            "content": { "application/json": {} },
            "description": "success"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            },
            "description": "unprocessable entity"
          }
        },
        "summary": "Create user forgot password request",
        "tags": ["user"]
      },
      "put": {
        "callbacks": {},
        "operationId": "BuildelWeb.UserPasswordResetController.update",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateForgotPasswordRequest"
              }
            }
          },
          "description": "user",
          "required": false
        },
        "responses": {
          "200": {
            "content": { "application/json": {} },
            "description": "success"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnprocessableEntity" }
              }
            },
            "description": "unprocessable entity"
          }
        },
        "summary": "Update forgotten password",
        "tags": ["user"]
      }
    }
  },
  "security": [],
  "servers": [{ "url": "https://buildel-api.fly.dev", "variables": {} }],
  "tags": []
}
